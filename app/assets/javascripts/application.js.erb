// This is a manifest file that'll be compiled into including all the files listed below.
// Add new JavaScript/Coffee code in separate files in this directory and they'll automatically
// be included in the compiled file accessible from http://example.com/assets/application.js
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// the compiled file.
//
//= require jquery
//= require jquery_ujs
//= require jquery_tmpl
//= require jquery_validate
//= require swimbox.js
//= require jquery-ui
//= require jquery.tablednd
//= require jquery.transform2d
//= require modernizr-2.6.2.min
//= require_self

SUBMARINE = {

  show_notice: function(notice) {
    if($('#flashnotice').size() > 0) {
      $('#flashnotice').replaceWith('<div id="flashnotice">' + notice + '</div>');
    } else {
      if($('body section').size() > 0) {
        $($('body section')[0]).before('<div id="flashnotice">' + notice + '</div>');
      } else {
        $('header').after('<div id="flashnotice">' + notice + '</div>');
      }
    }
  },

  hide_notice: function() {
    $('#flashnotice').remove();
  },

  /*** list drag'n drop handling ***/
  changeListHandler: function(event,ui){
    $(ui.item).removeClass("dragging");
    var moved_issue_id;
    var list_element;
    if($(ui.item).is("li")) {
      list_element = $(ui.item);
    } else {
      list_element = $(ui.item).parents('li');
    }

    var check_for_backlog = $(ui.item);
    var current_item_id = $(check_for_backlog).attr('id');

    if(check_for_backlog.parents('ul#new_issues_list').size() > 0) {
      $("#" + current_item_id + ' .delete_issue').css('display', 'inline');
      $("#" + current_item_id + ' .finish_issue').css('display', 'none');
      $("#" + current_item_id + ' .set_issue_ready').css('display', 'none');
    }

    if (check_for_backlog.parents('ul#sprint_backlog_list').size() > 0) {
      $("#" + current_item_id + ' .delete_issue').css('display', 'none');
      $("#" + current_item_id + ' .finish_issue').css('display', 'inline');
      $("#" + current_item_id + ' .set_issue_ready').css('display', 'inline');
    }
    if(check_for_backlog.parents('ul#backlog_list').size() > 0){
      $("#" + current_item_id + ' .delete_issue').css('display', 'inline');
      $("#" + current_item_id + ' .finish_issue').css('display', 'none');
      $("#" + current_item_id + ' .set_issue_ready').css('display', 'none');
    }

    var controls = list_element.find('.controls_container');
    var finish_button = list_element.find('a.finish_button');
    if (list_element.parents('ul#sprint_backlog_list').size() > 0) {
      finish_button.removeClass("finish");
      controls.addClass('sprint_controls');
    } else {
      finish_button.addClass("finish");
      controls.removeClass('sprint_controls');
    }

    var data = { moved_issue: list_element.attr("data-id"),
      predecessor: $(list_element).prev() && $(list_element).prev().attr("data-id"),
      lock_versions: {},
      backlog: $(list_element).parent().attr("id").split("_list")[0]};
    $('ul#backlog_list > li').each(function(i, li){
      data.lock_versions[$(li).attr("data-id")] = $(li).attr("data-lock-version");
    });
    $('ul#sprint_backlog_list > li').each(function(i, li){
      data.lock_versions[$(li).attr("data-id")] = $(li).attr("data-lock-version");
    });
    $('ul#new_issues_list > li').each(function(i, li){
      data.lock_versions[$(li).attr('data-id')] = $(li).attr('data-lock-version');
    });

    $.ajax({
      type: 'POST',
      url: SUBMARINE.changeListURL,
      contentType: "application/json",
      data: JSON.stringify(data),
      success: function(data, textStatus, jqXHR) {
        for (var key in data) {
          $("li[data-id='" + key + "']").attr('data-lock-version', data[key]);
        }
      },
      error: function(){
        $("#refresh-dialog").dialog('open');
      },
      async: false
    });
    SUBMARINE.showStoryPointsSum();
    SUBMARINE.updateBacklogNavigation();
  },

  toggleDescription: function(event){
    if($(this).hasClass("short")){
      $(this).removeClass("short");
      $(this).parent().css('height', $(this).height());
    } else {
      $(this).addClass("short");
      $(this).parent().css('height', $(this).height());
    }
  },

  showStoryPointsSum: function(){
    var sum = 0.0;
    var elements = $('ul#sprint_backlog_list > li');
    $('#half_story_point_small').hide();
    $('#half_story_point').hide();
    $('#story_points_sum > span').show();
    $.each(elements, function(i, element) {
      value = parseFloat($(element).attr('data-story_points'), 10);
      if(!!value) {
        sum += value;
      }
    });
    if(Math.floor(sum + 0.5) != sum) {
      if(sum >= 1) {
        $('#story_points_sum > span').html(Math.floor(sum));
        $('#half_story_point_small').show();
      } else {
        $('#half_story_point').show();
        $('#story_points_sum > span').hide();
      }
    } else {
      $('#story_points_sum > span').html(Math.floor(sum));
    }
  },

  check_sp_radio_image: function(){
    SUBMARINE.animate_radio_image(this, 'sp_radio_images');

    // set value in form
    $(this).siblings('input').val($(this).attr('data-sp-value'));
  },

  check_type_radio_image: function(){
    SUBMARINE.animate_radio_image(this, 'type_radio_images');

    // set value in form
    $(this).siblings('input').val($(this).attr('data-type'));
  },

  check_project_radio_image: function(){
    SUBMARINE.animate_radio_image(this, 'project_radio_images');

    // set value in form
    $(this).siblings('input[id$="_project_id"]').val($(this).attr('data-project-id'))
  },

  animate_radio_image: function(element, image_type){
    var old_element = $('.' + image_type + ' .radio_image.active')[0];
    if(!!old_element) {
      var old_el_img = $(old_element).children('img')[0];
      $(old_element).animate({transform: 'translateY(0px) scale(1)'});
      $(old_el_img).attr('src', $(old_el_img).attr("data-img_light"));
      $(old_element).removeClass('active');
    }
    var translation = '5px';
    if(image_type == 'sp_radio_images') {
      translation = '10px';
    }
    var img = $(element).children('img')[0];
    if($(img).attr("src").indexOf('_light') > 0) {
      $(img).attr("src", $(img).attr("data-img_heavy"));
    }
    $(element).animate({transform: 'translateY(-' + translation + ') scale(1.3)'});
    $(element).addClass('active');
  },

  preselect_radio_images: function(story_points, type, project) {
    var sp_div = $('div.sp_' + story_points.replace('.', '_'));
    if(sp_div.size() <= 0) {
      sp_div = $('div.sp_unknown');
    }
    SUBMARINE.animate_radio_image(sp_div[0], 'sp_radio_images');
    var type_div = $('div.' + type.toLowerCase());
    if(type_div.size() > 0) {
      SUBMARINE.animate_radio_image(type_div[0], 'type_radio_images');
    }
    var project_div = $('div.' + project.toLowerCase());
    if(project_div.size() > 0) {
      SUBMARINE.animate_radio_image(project_div[0], 'project_radio_images');
    }
  },

  updateBacklogNavigation: function() {
    if(window.location.pathname == '/new_issues') {
      var new_caption = "Neue Eintr√§ge (" + SUBMARINE.counter.getNewIssueCount() + ")";
      $('a#new_issues_list').text(new_caption);
      var caption = "Backlogs (" + SUBMARINE.counter.getBacklogCount() + "/" + SUBMARINE.sprint_count + ")" ;
      $('a#backlogs').text(caption);
    } else {
      var caption = "Backlogs (" + SUBMARINE.counter.getBacklogCount() + "/" + SUBMARINE.counter.getSprintBacklogCount() + ")";
      $("#backlogs").text(caption);
    }
  },

  counter: {
    getBacklogCount: function() {
      return $("#backlog_list li").length;
    },

    getSprintBacklogCount: function() {
      return $("#sprint_backlog_list li").length;
    },

    getNewIssueCount: function() {
      return $('#new_issues_list li').length;
    }
  }
}
